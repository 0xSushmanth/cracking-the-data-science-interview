source('~/.active-rstudio-document', echo=TRUE)
View(data1)
source('~/.active-rstudio-document', echo=TRUE)
data1$agecat <- cut(data1$Age, c(-Inf, 0, 18, 24, 34, 44, 54, 64, Inf))
View(data1)
summary(data1)
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age ~ agecat, data = data1, FUN = siterange)
summaryBy(Gender + Signed_In + Impressions + Clicks ~ agecat, data = data1)
library(ggplot2)
ggplot(data1, aes(x=Impressions, fill=agecat)) + geom_histogram(binwidth = 1)
ggplot(data1, aes(x=agecat, y=Impressions, fill=agecat)) + geom_boxplot()
data1$hasimps <- cut(data1$Impressions, c(-Inf, 0, Inf))
summaryBy(Clicks ~ hasimps, data = data1, FUN = siterange)
ggplot(subset(data1, Impressions > 0), aes(x = Clicks / Impressions, colour = agecat)) + geom_density()
ggplot(subset(data1, Clicks > 0), aes(x = Clicks / Impressions, colour = agecat)) + geom_density()
ggplot(subset(data1, Clicks > 0), aes(x = agecat, y = Clicks, fill = agecat)) + geom_boxplot()
ggplot(subset(data1, Clicks > 0), aes(x = Clicks, colour = agecat)) + geom_density()
data1$scode[data1$Impressions==0] <- 'NoImps'
data1$scode[data1$Impressions>0] <- 'Imps'
data1$scode[data1$Clicks>0] <- 'Clicks'
data1$scode <- factor(data1$scode)
clen <- function(x){c(length(x))}
head(data1)
etable <- summaryBy(Impressions ~ scode + Gender + agecat, data = data1, FUN = clen)
View(etable)
require(ggplot2)
data(diamonds)
head(diamonds)
ggplot(diamonds) + geom_histogram(aes(x = price)) + geom_vline(xintercept = 12000)
diamonds$Expensive <- ifelse(diamonds$price >= 12000, 1, 0)
head(diamonds)
diamonds$price <- NULL
install.packages("glmnet")
require(glmnet)
# build the predictor matrix, we are leaving out the last column which is our response
x <- model.matrix(~., diamonds[, -ncol(diamonds)])
# build the response vector
y <- as.matrix(diamonds$Expensive)
# run the glmnet
system.time(modGlmnet <- glmnet(x=x, y=y, family = "binomial"))
# plot the coefficient path
plot(modGlmnet, label=TRUE)
set.seed(48872)
sample(1:10)
require(rpart)
modTree <- rpart(Expensive ~ ., data = diamonds)
plot(modTree)
text(modTree)
require(boot)
mean(diamonds$carat)
sd(diamonds$carat)
boot.mean <- function(x, i)
{
mean(x[i])
}
boot(data = diamonds$carat, statistic = boot.mean, R = 120)
install.packages("adabag")
require(adabag)
modBag <- bagging(formula = Species ~ ., iris, mfinal = 10)
install.packages("mboost")
require(mboost)
system.time(modglmBoost <- glmboost(as.factor(Expensive) ~ .,
data = diamonds,
family = Binomial(link = "logit")))
summary(modglmBoost)
?blackboost
install.packages("randomForest")
require(randomForest)
system.time(modForest <- randomForest(Species ~ ., data = iris,
importance = TRUE, proximity = TRUE))
library(ggplot2)
mpg
ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(mpg, aes(x = displ, y = cty, colour = class)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue")
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.2)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=1)
library(mgcv)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method = "gam", formula = y ~ s(x))
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method = "lm")
ggplot(mpg, aes(drv, hwy)) + geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(drv, hwy)) + geom_violin()
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_freqpoly()
ggplot(mpg, aes(hwy)) + geom_freqpoly(binwidth=2.5)
ggplot(mpg, aes(hwy)) + geom_freqpoly(binwidth=1)
ggplot(mpg, aes(displ, colour = drv)) + geom_freqpoly(binwidth=0.5)
ggplot(mpg, aes(displ, colour = drv)) + geom_histogram(binwidth = 0.5) + facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(manufacturer)) + geom_bar()
drugs <- data.frame(
drug = c("a", "b", "c"),
effect = c(4.2, 9.7, 6.1)
)
ggplot(drugs, aes(drug, effect)) + geom_bar(stat = "identity")
ggplot(drugs, aes(drug, effect)) + geom_point()
economics
ggplot(economics, aes(date, unemploy / pop)) + geom_line()
ggplot(economics, aes(date, uempmed)) + geom_line()
ggplot(economics, aes(unemploy / pop, uempmed)) + geom_path() + geom_point()
year <- function(x) as.POSIXlt(x)$year + 1900
ggplot(economics, aes(unemploy / pop, uempmed)) +
geom_path(colour = "grey50") + geom_point(aes(colour = year(date)))
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3)
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3) + xlab("city driving (mpg)") + ylab("highway driving (mpg")
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3) + xlab(NULL) + ylab(NULL)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25) +
xlim("f", "r") + ylim(20, 30)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25) +
geom_jitter(width = 0.25, na.rm = TRUE) + ylim(NA, 30)
p <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) + geom_point()
print(p)
summary(p)
qplot(displ, hwy, data = mpg)
qplot(displ, data = mpg)
qplot(displ, hwy, data = mpg, colour = "blue")
qplot(displ, hwy, data = mpg, colour = I("blue"))
library(ggplot2)
df <- data.frame(
x = c(3, 1, 5),
y = c(2, 4, 6),
label = c("a", "b", "c")
)
p <- ggplot(df, aes(x, y, label = label)) +
labs(x = NULL, y = NULL) +
theme(plot.title = element_text(size = 12))
p + geom_point() + ggtitle("point")
p + geom_text() + ggtitle("text")
p + geom_bar(stat = "identity") + ggtitle("bar")
p + geom_tile() + ggtitle("raster")
p + geom_line() + ggtitle("line")
p + geom_area() + ggtitle("area")
p + geom_path() + ggtitle("path")
p + geom_polygon() + ggtitle("polygon")
df <- data.frame(x = 1, y = 3:1, family = c("sans", "serif", "mono"))
ggplot(df, aes(x, y)) + geom_text(aes(label = family, family = family))
df <- data.frame(x = 1, y = 3:1, family = c("plain", "bold", "italic"))
ggplot(df, aes(x, y)) + geom_text(aes(label = face, fontface = face))
df <- data.frame(
x = c(1, 1, 2, 2, 1.5),
y = c(1, 2, 1, 2, 1.5),
text = c("bottom-left", "bottom-right", "top-left", "top-right", "center")
)
ggplot(df, aes(x, y)) + geom_text(aes(label = text))
ggplot(df, aes(x, y)) + geom_text(aes(label = text), vjust = "inward", hjust = "inward"))
ggplot(df, aes(x, y)) + geom_text(aes(label = text), vjust = "inward", hjust = "inward")
df <- data.frame(trt = c("a", "b", "c"), resp = c(1.2, 3.4, 2.5))
ggplot(df, aes(resp, trt)) +
geom_point() +
geom_text(aes(label = paste0("(", resp, ")")), nudge_y = -0.25) + xlim(1, 3.6)
ggplot(mpg, aes(displ, hwy)) + geom_text(aes(label = model)) + xlim(1, 8)
ggplot(mpg, aes(displ, hwy)) + geom_text(aes(label = model), check_overlap = TRUE) + xlim(1, 8)
label <- data.frame(
waiting = c(55, 80),
eruptions = c(2, 4.3),
label = c("peak one", "peak two")
)
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_tile(aes(full = density)) +
geom_label(data = label, aes(label = label))
ggplot(mpg, aes(displ, hwy, colour = class)) + geom_point()
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point(show.legend = FALSE) +
directlabels::geom_dl(aes(label = class), method = "smart.grid")
install.packages("directlabels")
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point(show.legend = FALSE) +
directlabels::geom_dl(aes(label = class), method = "smart.grid")
ggplot(economics, aes(date, unemploy)) + geom_line()
presidential <- subset(presidential, start > economics$date[1])
ggplot(economics) +
geom_rect(
aes(xmin = start, xmax = end, fill = party),
ymin = -Inf, ymax = Inf, alpha = 0.2,
data = presidential
) +
geom_vline(
aes(xintercept = as.numeric(start)),
data = presidential,
colour = "grey50", alpha = 0.5
) +
geom_text(
aes(x = start, y = 2500, label = name),
data = presidential,
size = 3, vjust = 0, hjust = 0, nudge_x = 50
) +
geom_line(aes(date, unemploy)) +
scale_fill_manual(values = c("blue", "red"))
yrng <- range(economics$unemploy)
xrng <- range(economics$date)
caption <- paste(strwrap("Unemployment rates in the US have
varied a lot over the years", 40), collapse = "\n")
ggplot(economics, aes(date, unemploy)) +
geom_line() +
geom_text(
aes(x, y, label = caption),
data = data.frame(x = xrng[1], y = yrng[2], caption = caption),
hjust = 0, vjust = 1, size = 4
)
ggplot(diamonds, aes(log10(carat), log10(price))) +
geom_bin2d() + facet_wrap(~cut, nrow = 1)
mod_coef <- coef(lm(log10(price) ~ log10(carat), data = diamonds))
ggplot(diamonds, aes(log10(carat), log10(price))) +
geom_bin2d() +
geom_abline(intercept = mod_coef[1], slope = mod_coef[2], colour = "white", size = 1) +
facet_wrap(~cut, nrow = 1)
data(Oxboys, package = "nlme")
head(Oxboys)
ggplot(Oxboys, aes(age, height, group = Subject)) + geom_point() + geom_line()
ggplot(Oxboys, aes(age, height)) + geom_point() + geom_line()
ggplot(Oxboys, aes(age, height, group = Subject)) + geom_line() +
geom_smooth(method = "lm", se = FALSE)
ggplot(Oxboys, aes(age, height)) + geom_line(aes(group = Subject)) +
geom_smooth(method = "lm", size = 2, se = FALSE)
ggplot(Oxboys, aes(Occasion, height)) + geom_boxplot()
ggplot(Oxboys, aes(Occasion, height)) + geom_boxplot() +
geom_line(aes(group = Subject), colour = "#3366FF", alpha = 0.5)
df <- data.frame(x = 1:3, y = 1:3, colour = c(1, 3, 5))
ggplot(df, aes(x, y, colour = factor(colour))) +
geom_line(aes(group = 1), size = 2) +
geom_point(size = 5)
ggplot(df, aes(x, y, colour = colour)) +
geom_line(aes(group = 1), size = 2) +
geom_point(size = 5)
xgrid <- with(df, seq(min(x), max(x), length = 50))
interp <- data.frame(
x = xgrid,
y = approx(df$x, df$y, xout = xgrid)$y,
colour = approx(df$x, df$colour, xout = xgrid)$y
)
ggplot(interp, aes(x, y, colour = colour)) +
geom_line(size = 2) + geom_point(data = df, size = 5)
ggplot(mpg, aes(class)) + geom_bar()
ggplot(mpg, aes(class, fill = drv)) + geom_bar()
ggplot(mpg, aes(class, fill = hwy)) + geom_bar()
ggplot(mpg, aes(class, fill = hwy, group = hwy)) + geom_bar()
ggplot(faithfuld, aes(eruptions, waiting)) + geom_contour(aes(z = density, colour = ..level..))
ggplot(faithfuld, aes(eruptions, waiting)) + geom_raster(aes(fill = density))
small <- faithfuld[seq(1, nrow(faithfuld), by = 10), ]
ggplot(small, aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) + scale_size_area()
install.packages("map_data")
y <- c(18, 11, 16)
df <- data.frame(x = 1:3, y = y, se = c(1.2, 0.5, 1.0))
base <- ggplot(df, aes(x, y, ymin = y - se, ymax = y + se))
base + geom_crossbar()
base + geom_pointrange()
base + geom_smooth(stat = "identity")
base + geom_errorbar()
base + geom_linerange()
base + geom_ribbon()
ggplot(midwest, aes(percwhite, percbelowpoverty)) + geom_point()
diamonds
ggplot(diamonds, aes(depth)) + geom_histogram()
ggplot(diamonds, aes(depth)) + geom_histogram(binwidth = 0.1) + xlim(55, 70)
ggplot(diamonds, aes(depth)) +
geom_freqpoly(aes(colour = cut), binwidth = 0.1, na.rm = TRUE) +
xlim(58, 68) + theme(legend.position = "none")
ggplot(diamonds, aes(depth)) +
geom_histogram(aes(fill = cut), binwidth = 0.1, position = "fill", na.rm = TRUE) +
xlim(58, 68) + theme(legend.position = "none")
ggplot(diamonds, aes(depth)) +
geom_density(na.rm = TRUE) +
xlim(58, 68) + theme(legend.position = "none")
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
geom_density(alpha = 0.2, na.rm = TRUE) +
xlim(58, 68) + theme(legend.position = "none")
df <- data.frame(x = rnorm(2000), y = rnorm(2000))
norm <- ggplot(df, aes(x, y)) + xlab(NULL) + ylab(NULL)
norm + geom_point()
norm + geom_point(shape = 1)
norm + geom_point(shape = ".")
norm + geom_point(alpha = 1 / 3)
norm + geom_point(alpha = 1 / 5)
norm + geom_point(alpha = 1 / 10)
norm + geom_bin2d()
norm + geom_bin2d(bins = 10)
norm + geom_hex()
ggplot(diamonds, aes(color)) + geom_bar()
ggplot(diamonds, aes(color, price)) + geom_bar(stat = "summary_bin", fun.y = mean)
ggplot(diamonds, aes(table, depth)) + geom_bin2d(binwidth = 1, na.rm = TRUE) +
xlim(50, 70) + ylim(50, 70)
ggplot(diamonds, aes(table, depth, z = price)) +
geom_raster(binwidth = 1, stat = "summary_2d", fun = mean, na.rm = TRUE) +
xlim(50, 70) + ylim(50, 70)
